<html>
	<head>
		<meta charset="UTF-8" />
		<link rel="icon" href="/favicon.ico" type="image/png" />
		<title>Video Editor - Wrapper: Offline</title>
		<link rel="stylesheet" type="text/css" href="/pages/css/modern-normalize.css">
		<link rel="stylesheet" type="text/css" href="/pages/css/global.css">
		<link rel="stylesheet" type="text/css" href="/pages/css/flash.css">
		<link rel="stylesheet" type="text/css" href="/pages/css/importer.css">
		<style>
			body {
				background: #eee;
			}

		</style>
		<script src="/pages/js/jquery.js"></script>
		<script src="/pages/js/filesize.js"></script>
		<script src="/pages/js/global.js"></script>
		<script>
			const STORE_URL = "http://localhost:4343/static/store/";
			const CLIENT_URL = "<%= it.env.CLIENT_URL %>";
			const IS_STUDIO = true;

		</script>
	</head>
	<%~ includeFile("../includes/header", { env: it.env }) %>
	<body style="margin:0px">
		<main>
			<nav id="importer">
				<nav id="import_head">
					<button id="import-toggle" onclick="document.getElementById('importer-files').click()" class="import-button">UPLOAD</button>
					<button id="library-toggle" onclick="viewLibrary();" class="import-button">VIEW LIBRARY</button>
					<h3 class="close-button" onclick="hideImporter()">✖</h3>
					<form>
						<input id="importer-files" type="file" name="file" title="Upload Files" accept=".mp3,.wav,.ogg,.wma,.swf,.gif,.png,.jpg,.mp4,.ttf" style="display:none" />
					</form>
				</nav>
				<div id="importer-queue"></div>
			</nav>
			<%~ it.object(it.attrs, it.params) %>
		</main>
		<div id="previewer" style="display:none">
			<div id="preview-inside">
				<h2 id="preview-video">Preview Video</h2>
			
				<object id="preview_player" data="<%= it.env.SWF_URL %>/player.swf" type="application/x-shockwave-flash"
					width="640" height="360">
					<param name="flashvars" />
					<param name="allowScriptAccess" value="always" />
					<param name="allowFullScreen" value="true" />
				</object>
				<div class="buttons">
					<button class="preview-button edit" type="button" onclick="hidePreviewer();">Back to editing</button>
					<button class="preview-button save" type="button" onclick="publishStudio();">Save Now</button>
				</div>

				<a class="close-button" onclick="hidePreviewer()">×</a>
			</div>
		</div>
	</body>
	<script>
	let previous = [];
	let previousid = [];
	let id;
	let exists = false;
  	let fil;
	let files;
document.onkeyup = async function(e) {
  if (e.which == 91) {
	Promise.resolve().then(hiPaste);
  }
};
async function hiPaste()
{
  studio[0].importerStatus("processing");
  const auth = await navigator.permissions.query( { name: "clipboard-read" } );
  if( auth.state !== 'denied' ) {
    const item_list = await navigator.clipboard.read();
    let image_type; // we will feed this later
    const item = item_list.find( item => // choose the one item holding our image
      item.types.some( type => { // does this item have our type
        if( type.startsWith( 'image/' ) ) {
          image_type = type; // store which kind of image type it is
          return true;
        }
      } )
    );
    const file = item && await item.getType( image_type );
	files = file;
	  // Do a check to make sure not to add the same image to the library and just use the old one
		if (fil !== undefined)
		{
		console.log(previousid);
		if (fil.size == file.size || previous.indexOf(file.size) != -1)
		{
 	     let b = new FormData();
	    if (previous.indexOf(file.size) != -1)
		{
		b.append("assetId", previousid[previous.indexOf(file.size)]);
		}
		else
		{
		b.append("assetId", id);
		}
		$.ajax({
			url: "/goapi/getAsset/",
			method: "POST",
			data: b,
			processData: false,
			contentType: false,
			error:function (xhr, ajaxOptions, thrownError){
   			 if(xhr.status==404) {
			const index = previous.indexOf(file.size);
			previous.splice(index, 1);
			previousid.splice(index, 1);
			console.log(previousid);
			exists = false;
    		}
			}
		})
			.done(d => {
			console.log("hey... this exists already");
			exists = true;
			if (previous.indexOf(file.size) != -1) studio[0].importerAddAsset("prop", previousid[previous.indexOf(file.size)]);
			else studio[0].importerAddAsset("prop", id);
			studio[0].importerStatus("done");
		})
		}
		else
		{
		exists = false;
		}
		}





	setTimeout(async function(){
	fil = file;
	if (!exists)
	{
	console.log("Ajax is going through?");
	let b = new FormData();
		b.append("import", file);
		b.append("name", "pasted")
		b.append("type", "prop");
		b.append("subtype", "0");
		b.append("ptype", this.ptype || "");
	$.ajax({
			url: "/api/asset/upload",
			method: "POST",
			data: b,
			processData: false,
			contentType: false,
			dataType: "json"
		})
			.done(d => {
			if (!exists)
			id = d.data.id;
			studio[0].importerStatus("done");
			previous.push(file.size);
			previousid.push(d.data.id);
			studio[0].importerUploadComplete(d.data.type, d.data.file, d.data);
			// Set a cooldown before you add the prop
			setTimeout(async function (){console.log("TRYING TO ADD IT"); studio[0].importerAddAsset("prop", d.data.id);}, 500)
		})
  	}
	}, 500);
	}
}
</script>
	<script src="/pages/js/importer.js"></script>
	<script src="/pages/js/studio.js"></script>
</html>
